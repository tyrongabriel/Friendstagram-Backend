-- MySQL Script generated by MySQL Workbench
-- Mon Jan 17 21:16:24 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema friendstagram
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema friendstagram
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `friendstagram` DEFAULT CHARACTER SET utf8 ;
USE `friendstagram` ;

-- -----------------------------------------------------
-- Table `friendstagram`.`group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `friendstagram`.`group` (
  `groupId` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `code` VARCHAR(16) NOT NULL,
  PRIMARY KEY (`groupId`),
  UNIQUE INDEX `group_code_UNIQUE` (`code` ASC),
  UNIQUE INDEX `groupId_UNIQUE` (`groupId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `friendstagram`.`fileType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `friendstagram`.`fileType` (
  `typeId` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`typeId`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  UNIQUE INDEX `typeId_UNIQUE` (`typeId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `friendstagram`.`resource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `friendstagram`.`resource` (
  `resourceId` INT NOT NULL AUTO_INCREMENT,
  `filename` VARCHAR(64) NOT NULL,
  `path` VARCHAR(250) NOT NULL,
  `fileTypeId` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`resourceId`, `fileTypeId`),
  INDEX `fk_resource_fileType1_idx` (`fileTypeId` ASC),
  UNIQUE INDEX `resourceId_UNIQUE` (`resourceId` ASC),
  CONSTRAINT `fk_resource_fileType1`
    FOREIGN KEY (`fileTypeId`)
    REFERENCES `friendstagram`.`fileType` (`typeId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `friendstagram`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `friendstagram`.`user` (
  `userId` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(64) NOT NULL,
  `email` VARCHAR(64) NOT NULL,
  `password` VARCHAR(64) NOT NULL,
  `salt` VARCHAR(64) NOT NULL,
  `verification_code` VARCHAR(16) NOT NULL,
  `verified` TINYINT NOT NULL DEFAULT 0,
  `groupId` INT NOT NULL,
  `profilePictureId` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`userId`, `groupId`, `profilePictureId`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `verification_code_UNIQUE` (`verification_code` ASC),
  INDEX `fk_user_group1_idx` (`groupId` ASC),
  INDEX `fk_user_resource1_idx` (`profilePictureId` ASC),
  UNIQUE INDEX `userId_UNIQUE` (`userId` ASC),
  CONSTRAINT `fk_user_group1`
    FOREIGN KEY (`groupId`)
    REFERENCES `friendstagram`.`group` (`groupId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_resource1`
    FOREIGN KEY (`profilePictureId`)
    REFERENCES `friendstagram`.`resource` (`resourceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `friendstagram`.`post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `friendstagram`.`post` (
  `postId` INT NOT NULL AUTO_INCREMENT,
  `heading` VARCHAR(100) NULL,
  `description` VARCHAR(200) NULL,
  `created_at` DATETIME NOT NULL,
  `resourceId` INT NOT NULL,
  `userId` INT NOT NULL,
  PRIMARY KEY (`postId`, `resourceId`, `userId`),
  UNIQUE INDEX `id_post_UNIQUE` (`postId` ASC),
  INDEX `fk_post_resource1_idx` (`resourceId` ASC),
  INDEX `fk_post_user1_idx` (`userId` ASC),
  CONSTRAINT `fk_post_resource1`
    FOREIGN KEY (`resourceId`)
    REFERENCES `friendstagram`.`resource` (`resourceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_user1`
    FOREIGN KEY (`userId`)
    REFERENCES `friendstagram`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `friendstagram`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `friendstagram`.`comment` (
  `commentId` INT NOT NULL AUTO_INCREMENT,
  `text` VARCHAR(200) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `postId` INT NOT NULL,
  PRIMARY KEY (`commentId`, `postId`),
  UNIQUE INDEX `id_comment_UNIQUE` (`commentId` ASC),
  INDEX `fk_comment_post1_idx` (`postId` ASC),
  CONSTRAINT `fk_comment_post1`
    FOREIGN KEY (`postId`)
    REFERENCES `friendstagram`.`post` (`postId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `friendstagram`.`chatMessage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `friendstagram`.`chatMessage` (
  `chatMessageId` INT NOT NULL AUTO_INCREMENT,
  `content` VARCHAR(1000) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `userId` INT NOT NULL,
  PRIMARY KEY (`chatMessageId`, `userId`),
  UNIQUE INDEX `chatMessageId_UNIQUE` (`chatMessageId` ASC),
  INDEX `fk_chatMessage_user1_idx` (`userId` ASC),
  CONSTRAINT `fk_chatMessage_user1`
    FOREIGN KEY (`userId`)
    REFERENCES `friendstagram`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
INSERT_METHOD = LAST;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
